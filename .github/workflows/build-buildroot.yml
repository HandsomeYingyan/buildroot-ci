#=================================================
# https://github.com/HandsomeYingyan/buidroot-ci
# Description: Build Buildroot using GitHub Actions
# Lisence: MIT
# Author: HandsomeYingyan
# 
#=================================================

name: Build Buildroot

on:
  repository_dispatch:
    types: helloworld
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/aodzip/buildroot-tiny200.git
  REPO_BRANCH: master
  CONFIG_FILE: .config
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Hello World
      if: github.event.action == 'helloworld'
      run: |
        echo My name is Widora.
        echo Hello World!
          
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip libusb-dev libusb-1.0-0-dev bc  python3-distutils zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig python3-dev python-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
 
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH buildroot
      
    - name: Apply Config
      run: cd buildroot && make widora_mangopi_r3_defconfig

    - name: SSH connection to Actions
      uses: HandsomeYingyan/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')


    - name: Compile the firmware
      id: compile
      run: |
        cd buildroot
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: buildroot_images
        path: buildroot/output/images
